# 문제
# 1부터 N까지의 수로 이루어진 순열이 있다. 이때, 사전순으로 다음에 오는 순열을 구하는 프로그램을 작성하시오.
#
# 사전 순으로 가장 앞서는 순열은 오름차순으로 이루어진 순열이고, 가장 마지막에 오는 순열은 내림차순으로 이루어진 순열이다.
#
# N = 3인 경우에 사전순으로 순열을 나열하면 다음과 같다.
#
# 1, 2, 3
# 1, 3, 2
# 2, 1, 3
# 2, 3, 1
# 3, 1, 2
# 3, 2, 1
# 입력
# 첫째 줄에 N(1 ≤ N ≤ 10,000)이 주어진다. 둘째 줄에 순열이 주어진다.
#
# 출력
# 첫째 줄에 입력으로 주어진 순열의 다음에 오는 순열을 출력한다. 만약, 사전순으로 마지막에 오는 순열인 경우에는 -1을 출력한다.
#
# 예제 입력 1
# 4
# 1 2 3 4
# 예제 출력 1
# 1 2 4 3
# 예제 입력 2
# 5
# 5 4 3 2 1
# 예제 출력 2
# -1

n = int(input())
arr = list(map(int, input().split()))

# 1) 오른쪽에서부터 '오르막' 시작점 찾기 (피벗 바로 오른쪽 인덱스 i)
i = n - 1
while i > 0 and arr[i-1] >= arr[i]:
    i -= 1

# 못 찾으면 마지막 순열
if i == 0:
    print(-1)
else:
    # 2) 꼬리에서 피벗(arr[i-1])보다 큰 수 중 가장 오른쪽 j
    j = n - 1
    while arr[i-1] >= arr[j]:
        j -= 1

    # 3) 피벗과 교환
    arr[i-1], arr[j] = arr[j], arr[i-1]

    # 4) 꼬리를 뒤집어 오름차순으로
    arr[i:] = reversed(arr[i:])

    print(*arr)





